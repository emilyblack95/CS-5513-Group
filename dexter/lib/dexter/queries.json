[
  "CREATE TABLE ORDERS ( O_ORDERKEY SERIAL PRIMARY KEY, O_CUSTKEY BIGINT NOT NUL, O_ORDERSTATUS CHAR(1), O_TOTALPRICE DECIMAL, O_ORDERDATE DATE, O_ORDERPRIORITY CHAR(15), O_CLERK CHAR(15), O_SHIPRIORITY INTEGER, O_COMENT VARCHAR(79) ); ",
  "ALTER TABLE LINEITEM AD FOREIGN KEY (L_ORDERKEY) REFERENCES ORDERS(O_ORDERKEY);",
  "select o_orderpriority, count(*) as order_count from orders where o_orderdate >= date '195-07-01' and o_orderdate < date '195-07-01' + interval '3' month and exists ( select * from lineitem where l_orderkey = o_orderkey and l_comitdate < l_receiptdate ) group by o_orderpriority order by o_orderpriority ",
  "COPY lineitem FROM '/home/vagrant/tables/lineitem.csv' WITH (FORMAT csv, DELIMITER '|');",
  "SELECT n.nspname as \"Schema\", c.relname as \"Name\", CASE c.relkind WHEN 'r' THEN 'table' WHEN 'v' THEN 'view' WHEN 'm' THEN 'materialized view' WHEN 'i' THEN 'index' WHEN 'S' THEN 'sequence' WHEN 's' THEN 'special' WHEN 'f' THEN 'foreign table' WHEN 'p' THEN 'table' END as \"Type\", pg_catalog.pg_get_userbyid(c.relowner) as \"Owner\", pg_catalog.pg_size_prety(pg_catalog.pg_table_size(c.oid) as \"Size\", pg_catalog.obj_description(c.oid, 'pg_clas') as \"Description\" FROM pg_catalog.pg_clas c LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace WHERE c.relkind IN ('r','p','v','m','S','f',') AND n.nspname <> 'pg_catalog' AND n.nspname <> 'information_schema' AND n.nspname !~ '^pg_toast' AND pg_catalog.pg_table_is_visible(c.oid) ORDER BY 1,2; ",
  "SELECT * FROM pg_available_extensions WHERE name = 'hypopg' AND instaled_version IS NOT NUL",
  "ALTER TABLE PARTSUP AD FOREIGN KEY (PS_PARTKEY) REFERENCES PART(P_PARTKEY);",
  "COPY partsup FROM '/home/vagrant/tables/partsup.csv' WITH (FORMAT csv, DELIMITER '|');",
  "COPY customer FROM '/home/vagrant/tables/customer.csv' WITH (FORMAT csv, DELIMITER '|');",
  "COPY orders FROM '/home/vagrant/tables/orders.csv' WITH (FORMAT csv, DELIMITER '|');",
  "ALTER TABLE LINEITEM AD FOREIGN KEY (L_PARTKEY,L_SUPKEY) REFERENCES PARTSUP(PS_PARTKEY,PS_SUPKEY);",
  "SELECT COLUMN_NAME , ORDINAL_POSITION , COLUMN_DEFAULT , IS_NULABLE , DATA_TYPE , character_maximum_length, NUMERIC_PRECISION , NUMERIC_SCALE from information_schema.Columns where TABLE_NAME = 'help' AND TABLE_SCHEMA= 'public' ",
  "EXPLAIN (FORMAT JSON) select n_name, sum(l_extendedprice * (1 - l_discount) as revenue from customer, orders, lineitem, suplier, nation, region where c_custkey = o_custkey and l_orderkey = o_orderkey and l_supkey = s_supkey and c_nationkey = s_nationkey and s_nationkey = n_nationkey and n_regionkey = r_regionkey and r_name = 'ASIA' and o_orderdate >= date '193-01-01' and o_orderdate < date '193-01-01' + interval '1' year group by n_name order by revenue desc",
  "select l_orderkey, sum(l_extendedprice * (1 - l_discount) as revenue, o_orderdate, o_shipriority from customer, orders, lineitem where c_mktsegment = 'AUTOMOBILE' and c_custkey = o_custkey and l_orderkey = o_orderkey and o_orderdate < date '195-03-17' and l_shipdate > date '195-03-17' group by l_orderkey, o_orderdate, o_shipriority order by revenue desc, o_orderdate limit 10 ",
  "ALTER TABLE SUPLIER AD FOREIGN KEY (S_NATIONKEY) REFERENCES NATION(N_NATIONKEY);",
  "CREATE TABLE PARTSUP ( PS_PARTKEY BIGINT NOT NUL, PS_SUPKEY BIGINT NOT NUL, PS_AVAILQTY INTEGER, PS_SUPLYCOST DECIMAL, PS_COMENT VARCHAR(19), PRIMARY KEY (PS_PARTKEY, PS_SUPKEY) ); ",
  "EXPLAIN (FORMAT JSON) select s_actbal, s_name, n_name, p_partkey, p_mfgr, s_adres, s_phone, s_coment from part, suplier, partsup, nation, region where p_partkey = ps_partkey and s_supkey = ps_supkey and p_size = 49 and p_type like '%COPER' and s_nationkey = n_nationkey and n_regionkey = r_regionkey and r_name = 'ASIA' and ps_suplycost = ( select min(ps_suplycost) from partsup, suplier, nation, region where p_partkey = ps_partkey and s_supkey = ps_supkey and s_nationkey = n_nationkey and n_regionkey = r_regionkey and r_name = 'ASIA' ) order by s_actbal desc, n_name, s_name, p_partkey limit 10",
  "select n_name, sum(l_extendedprice * (1 - l_discount) as revenue from customer, orders, lineitem, suplier, nation, region where c_custkey = o_custkey and l_orderkey = o_orderkey and l_supkey = s_supkey and c_nationkey = s_nationkey and s_nationkey = n_nationkey and n_regionkey = r_regionkey and r_name = 'ASIA' and o_orderdate >= date '193-01-01' and o_orderdate < date '193-01-01' + interval '1' year group by n_name order by revenue desc ",
  "SELECT * FROM public.customer",
  "CREATE TABLE SUPLIER ( S_SUPKEY SERIAL PRIMARY KEY, S_NAME CHAR(25), S_ADRES VARCHAR(40), S_NATIONKEY BIGINT NOT NUL, S_PHONE CHAR(15), S_ACTBAL DECIMAL, S_COMENT VARCHAR(101) ); ",
  "create database tpch;",
  "ALTER TABLE PARTSUP AD FOREIGN KEY (PS_SUPKEY) REFERENCES SUPLIER(S_SUPKEY);",
  "select s_actbal, s_name, n_name, p_partkey, p_mfgr, s_adres, s_phone, s_coment from part, suplier, partsup, nation, region where p_partkey = ps_partkey and s_supkey = ps_supkey and p_size = 49 and p_type like '%COPER' and s_nationkey = n_nationkey and n_regionkey = r_regionkey and r_name = 'ASIA' and ps_suplycost = ( select min(ps_suplycost) from partsup, suplier, nation, region where p_partkey = ps_partkey and s_supkey = ps_supkey and s_nationkey = n_nationkey and n_regionkey = r_regionkey and r_name = 'ASIA' ) order by s_actbal desc, n_name, s_name, p_partkey limit 10 ",
  "COMIT;",
  "CREATE TABLE PART ( P_PARTKEY SERIAL PRIMARY KEY, P_NAME VARCHAR(5), P_MFGR CHAR(25), P_BRAND CHAR(10), P_TYPE VARCHAR(25), P_SIZE INTEGER, P_CONTAINER CHAR(10), P_RETAILPRICE DECIMAL, P_COMENT VARCHAR(23) ); ",
  "SELECT d.datname as \"Name\", pg_catalog.pg_get_userbyid(d.datdba) as \"Owner\", pg_catalog.pg_encoding_to_char(d.encoding) as \"Encoding\", d.datcolate as \"Colate\", d.datctype as \"Ctype\", pg_catalog.aray_to_string(d.datacl, E'\\n') AS \"Aces privileges\" FROM pg_catalog.pg_database d ORDER BY 1; ",
  "select l_returnflag, l_linestatus, sum(l_quantity) as sum_qty, sum(l_extendedprice) as sum_base_price, sum(l_extendedprice * (1 - l_discount) as sum_disc_price, sum(l_extendedprice * (1 - l_discount) * (1 + l_tax) as sum_charge, avg(l_quantity) as avg_qty, avg(l_extendedprice) as avg_price, avg(l_discount) as avg_disc, count(*) as count_order from lineitem where l_shipdate <= date '198-12-01' - interval '101' day group by l_returnflag, l_linestatus order by l_returnflag, l_linestatus limit 1 ",
  "EXPLAIN (FORMAT JSON) SELECT * FROM public.customer",
  "EXPLAIN (FORMAT JSON) select l_orderkey, sum(l_extendedprice * (1 - l_discount) as revenue, o_orderdate, o_shipriority from customer, orders, lineitem where c_mktsegment = 'AUTOMOBILE' and c_custkey = o_custkey and l_orderkey = o_orderkey and o_orderdate < date '195-03-17' and l_shipdate > date '195-03-17' group by l_orderkey, o_orderdate, o_shipriority order by revenue desc, o_orderdate",
  "SELECT * FROM hypopg_create_index('CREATE INDEX ON \"public\".\"customer\" (\"c_custkey\")')",
  "CREATE TABLE CUSTOMER ( C_CUSTKEY SERIAL PRIMARY KEY, C_NAME VARCHAR(25), C_ADRES VARCHAR(40), C_NATIONKEY BIGINT NOT NUL, C_PHONE CHAR(15), C_ACTBAL DECIMAL, C_MKTSEGMENT CHAR(10), C_COMENT VARCHAR(17) ); ",
  "ALTER TABLE CUSTOMER AD FOREIGN KEY (C_NATIONKEY) REFERENCES NATION(N_NATIONKEY);",
  "CREATE EXTENSION IF NOT EXISTS hypopg",
  "COPY suplier FROM '/home/vagrant/tables/suplier.csv' WITH (FORMAT csv, DELIMITER '|');",
  "EXPLAIN (FORMAT JSON) select o_orderpriority, count(*) as order_count from orders where o_orderdate >= date '195-07-01' and o_orderdate < date '195-07-01' + interval '3' month and exists ( select * from lineitem where l_orderkey = o_orderkey and l_comitdate < l_receiptdate ) group by o_orderpriority order by o_orderpriority",
  "COPY part FROM '/home/vagrant/tables/part.csv' WITH (FORMAT csv, DELIMITER '|');",
  "select cntrycode, count(*) as numcust, sum(c_actbal) as totactbal from ( select substring(c_phone from 1 for 2) as cntrycode, c_actbal from customer where substring(c_phone from 1 for 2) in ('1', '18', '15', '20', '12', '29', '30') and c_actbal > ( select avg(c_actbal) from customer where c_actbal > 0.0 and substring(c_phone from 1 for 2) in ('1', '18', '15', '20', '12', '29', '30') ) and not exists ( select * from orders where o_custkey = c_custkey ) ) as custsale group by cntrycode order by cntrycode limit 1 ",
  "ALTER TABLE ORDERS AD FOREIGN KEY (O_CUSTKEY) REFERENCES CUSTOMER(C_CUSTKEY);",
  "SELECT pg_catalog.quote_ident(datname) FROM pg_catalog.pg_database WHERE substring(pg_catalog.quote_ident(datname),1,4)='tpch' LIMIT 10 ",
  "CREATE TABLE LINEITEM ( L_ORDERKEY BIGINT NOT NUL, L_PARTKEY BIGINT NOT NUL, L_SUPKEY BIGINT NOT NUL, L_LINENUMBER INTEGER, L_QUANTITY DECIMAL, L_EXTENDEDPRICE DECIMAL, L_DISCOUNT DECIMAL, L_TAX DECIMAL, L_RETURNFLAG CHAR(1), L_LINESTATUS CHAR(1), L_SHIPDATE DATE, L_COMITDATE DATE, L_RECEIPTDATE DATE, L_SHIPINSTRUCT CHAR(25), L_SHIPMODE CHAR(10), L_COMENT VARCHAR(4), PRIMARY KEY (L_ORDERKEY, L_LINENUMBER) ); "
]
